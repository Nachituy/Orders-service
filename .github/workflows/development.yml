name: Deploy to ECR

on:
 push:
  branches: [ "desarrollo" ]

jobs:
   build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DESA }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DESA }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_DESA}}
        aws-region: us-east-1
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: obligatorio
        IMAGE_TAG: orders_image
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
      
   deploy:
    name: Deploy Image EKS
    runs-on: ubuntu-latest
    needs: build
    
    steps:
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DESA }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DESA }}
            aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_DESA}}
            aws-region: us-east-1
        
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: deploy to cluster EKS
          uses: kodermax/kubectl-aws-eks@master
          env:
             KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
             ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
             ECR_REPOSITORY: obligatorio
             IMAGE_TAG: orders_image
             RELEASE_IMAGE: 612686574181.dkr.ecr.us-east-1.amazonaws.com/obligatorio:orders_image
          with:
            args: run orders --image=$RELEASE_IMAGE --port=8080 --image-pull-policy Always -l app=orders
    
   kubernetes:
   
     name: Check Kubernetes
     runs-on: ubuntu-latest
     needs: deploy
     steps:
       - name: Configure AWS credentials
         uses: aws-actions/configure-aws-credentials@v1
         with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DESA }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DESA }}
            aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_DESA}}
            aws-region: us-east-1
       - name: Verifico Deploy
         uses: kodermax/kubectl-aws-eks@master
         env:
              KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_DESA }}
         with:
           args: rollout status orders
